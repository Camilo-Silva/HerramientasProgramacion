// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP2.Data;

#nullable disable

namespace TP2.Migrations
{
    [DbContext(typeof(CarContext))]
    partial class CarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("AccessoryCar", b =>
                {
                    b.Property<int>("AccessoriesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccessoriesId", "CarsId");

                    b.HasIndex("CarsId");

                    b.ToTable("AccessoryCar", (string)null);
                });

            modelBuilder.Entity("TP2.Models.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Name")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accessory", (string)null);
                });

            modelBuilder.Entity("TP2.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Motor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MotorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("AccessoryCar", b =>
                {
                    b.HasOne("TP2.Models.Accessory", null)
                        .WithMany()
                        .HasForeignKey("AccessoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP2.Models.Car", null)
                        .WithMany()
                        .HasForeignKey("CarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
